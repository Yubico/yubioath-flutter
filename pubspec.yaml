name: yubico_authenticator
description: Yubico Authenticator

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html

# This field is updated by running ./set-version.py <version>
# DO NOT MANUALLY EDIT THIS!
version: 7.2.3-dev.0+70203

environment:
  sdk: ^3.7.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  intl: ^0.19.0


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # cupertino_icons: ^1.0.2

  args: ^2.7.0
  async: ^2.12.0
  logging: ^1.3.0
  collection: ^1.19.1
  shared_preferences: ^2.5.3
  flutter_riverpod: ^2.6.1
  json_annotation: ^4.9.0
  freezed_annotation: ^3.0.0
  window_manager:
    git:
      url: https://github.com/fdennis/window_manager.git
      path: packages/window_manager
      ref: af74247d3c1616968ec281435f7410bcc7f9355c
  qrscanner_zxing:
    path: android/flutter_plugins/qrscanner_zxing
  screen_retriever: ^0.2.0
  desktop_drop: ^0.5.0
  url_launcher: ^6.3.1
  path_provider: ^2.1.5
  vector_graphics: ^1.1.15
  vector_graphics_compiler: ^1.1.16
  path: ^1.9.1
  file_picker: ^9.2.1
  archive: ^4.0.7
  crypto: ^3.0.2
  tray_manager: ^0.5.0
  local_notifier: ^0.1.5
  io: ^1.0.4
  base32: ^2.1.3
  convert: ^3.1.1
  material_symbols_icons: ^4.2815.0

dev_dependencies:
  integration_test:
    sdk: flutter
  flutter_test:
    sdk: flutter
  test_res:
    path: integration_test/test_res

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

  build_runner: ^2.4.14
  freezed: ^3.0.6
  json_serializable: ^6.9.5
  analyzer:
  analyzer_plugin:
  custom_lint_builder:
  custom_lint:
  lint:
    path: lint

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  generate: true
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/product-images/
    - assets/graphics/
    - assets/licenses/
    - assets/licenses/raw/
    - assets/l10n/
    - resources/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

  fonts:
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Regular.ttf
          weight: 400
        - asset: assets/fonts/Roboto-Light.ttf
          weight: 300
        - asset: assets/fonts/Roboto-Thin.ttf
          weight: 100
        - asset: assets/fonts/Roboto-Bold.ttf
          weight: 700
